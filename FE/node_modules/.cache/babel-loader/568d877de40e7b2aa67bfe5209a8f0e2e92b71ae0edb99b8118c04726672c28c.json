{"ast":null,"code":"var _jsxFileName = \"/Users/roseaugusto/personal-projects/exit-interview/src/pages/Form.js\";\nimport React from 'react';\nimport { Text } from './components/Text';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = () => {\n  const f = [{\n    type: 'text',\n    questionid: 1,\n    question: \"What's your name\"\n  }, {\n    type: 'radio',\n    questionid: 2,\n    question: \"What's your sex\"\n  }, {\n    type: 'checkbox',\n    questionid: 3,\n    question: \"What's your hobbies\"\n  }, {\n    type: 'date',\n    questionid: 4,\n    question: 'Date of birth'\n  }];\n  const answers = {\n    answerid: null,\n    questionid: null,\n    answer: null,\n    answerOptionId: null\n  };\n  const arr = [];\n  const handleOnChange = (id, field, value) => {\n    const index = arr.findIndex(key => key.questionid === id);\n    arr[index] = {\n      ...arr[index],\n      [field]: value\n    };\n  };\n  const onSubmit = () => {\n    console.log(arr);\n  };\n  const getValue = id => {\n    const index = arr.findIndex(key => key.questionid === id);\n    return arr[index];\n  };\n  const fields = key => {\n    arr.push({\n      ...answers,\n      questionid: key.questionid\n    });\n    switch (key.type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(Text, {\n          label: key.question,\n          value: getValue(key.questionid),\n          onChange: (id, field, value) => handleOnChange(id, field, value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5\",\n    children: [f.map((key, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: fields(key)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: onSubmit,\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","Text","Form","f","type","questionid","question","answers","answerid","answer","answerOptionId","arr","handleOnChange","id","field","value","index","findIndex","key","onSubmit","console","log","getValue","fields","push","map"],"sources":["/Users/roseaugusto/personal-projects/exit-interview/src/pages/Form.js"],"sourcesContent":["import React from 'react';\nimport { Text } from './components/Text';\n\nexport const Form = () => {\n  const f = [\n    { type: 'text', questionid: 1, question: \"What's your name\" },\n    { type: 'radio', questionid: 2, question: \"What's your sex\" },\n    { type: 'checkbox', questionid: 3, question: \"What's your hobbies\" },\n    { type: 'date', questionid: 4, question: 'Date of birth' },\n  ];\n  const answers = {\n    answerid: null,\n    questionid: null,\n    answer: null,\n    answerOptionId: null,\n  };\n  const arr = [];\n\n  const handleOnChange = (id, field, value) => {\n    const index = arr.findIndex((key) => key.questionid === id);\n    arr[index] = { ...arr[index], [field]: value };\n  };\n\n  const onSubmit = () => {\n    console.log(arr);\n  };\n\n  const getValue = (id) => {\n    const index = arr.findIndex((key) => key.questionid === id);\n    return arr[index];\n  };\n\n  const fields = (key) => {\n    arr.push({ ...answers, questionid: key.questionid });\n    switch (key.type) {\n      case 'text':\n        return (\n          <Text\n            label={key.question}\n            value={getValue(key.questionid)}\n            onChange={(id, field, value) => handleOnChange(id, field, value)}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n  return (\n    <div className='p-5'>\n      {f.map((key, index) => (\n        <div key={index}>{fields(key)}</div>\n      ))}\n      <button className='btn btn-primary' onClick={onSubmit}>\n        submit\n      </button>\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,mBAAmB;AAAC;AAEzC,OAAO,MAAMC,IAAI,GAAG,MAAM;EACxB,MAAMC,CAAC,GAAG,CACR;IAAEC,IAAI,EAAE,MAAM;IAAEC,UAAU,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAmB,CAAC,EAC7D;IAAEF,IAAI,EAAE,OAAO;IAAEC,UAAU,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAkB,CAAC,EAC7D;IAAEF,IAAI,EAAE,UAAU;IAAEC,UAAU,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAsB,CAAC,EACpE;IAAEF,IAAI,EAAE,MAAM;IAAEC,UAAU,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAgB,CAAC,CAC3D;EACD,MAAMC,OAAO,GAAG;IACdC,QAAQ,EAAE,IAAI;IACdH,UAAU,EAAE,IAAI;IAChBI,MAAM,EAAE,IAAI;IACZC,cAAc,EAAE;EAClB,CAAC;EACD,MAAMC,GAAG,GAAG,EAAE;EAEd,MAAMC,cAAc,GAAG,CAACC,EAAE,EAAEC,KAAK,EAAEC,KAAK,KAAK;IAC3C,MAAMC,KAAK,GAAGL,GAAG,CAACM,SAAS,CAAEC,GAAG,IAAKA,GAAG,CAACb,UAAU,KAAKQ,EAAE,CAAC;IAC3DF,GAAG,CAACK,KAAK,CAAC,GAAG;MAAE,GAAGL,GAAG,CAACK,KAAK,CAAC;MAAE,CAACF,KAAK,GAAGC;IAAM,CAAC;EAChD,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAM;IACrBC,OAAO,CAACC,GAAG,CAACV,GAAG,CAAC;EAClB,CAAC;EAED,MAAMW,QAAQ,GAAIT,EAAE,IAAK;IACvB,MAAMG,KAAK,GAAGL,GAAG,CAACM,SAAS,CAAEC,GAAG,IAAKA,GAAG,CAACb,UAAU,KAAKQ,EAAE,CAAC;IAC3D,OAAOF,GAAG,CAACK,KAAK,CAAC;EACnB,CAAC;EAED,MAAMO,MAAM,GAAIL,GAAG,IAAK;IACtBP,GAAG,CAACa,IAAI,CAAC;MAAE,GAAGjB,OAAO;MAAEF,UAAU,EAAEa,GAAG,CAACb;IAAW,CAAC,CAAC;IACpD,QAAQa,GAAG,CAACd,IAAI;MACd,KAAK,MAAM;QACT,oBACE,QAAC,IAAI;UACH,KAAK,EAAEc,GAAG,CAACZ,QAAS;UACpB,KAAK,EAAEgB,QAAQ,CAACJ,GAAG,CAACb,UAAU,CAAE;UAChC,QAAQ,EAAE,CAACQ,EAAE,EAAEC,KAAK,EAAEC,KAAK,KAAKH,cAAc,CAACC,EAAE,EAAEC,KAAK,EAAEC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QACjE;MAEN;QACE,OAAO,IAAI;IAAC;EAElB,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,WACjBZ,CAAC,CAACsB,GAAG,CAAC,CAACP,GAAG,EAAEF,KAAK,kBAChB;MAAA,UAAkBO,MAAM,CAACL,GAAG;IAAC,GAAnBF,KAAK;MAAA;MAAA;MAAA;IAAA,QAChB,CAAC,eACF;MAAQ,SAAS,EAAC,iBAAiB;MAAC,OAAO,EAAEG,QAAS;MAAA,UAAC;IAEvD;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,KAtDWjB,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}