{"ast":null,"code":"var _jsxFileName = \"/Users/roseaugusto/personal-projects/exit-interview/src/pages/Form.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = () => {\n  const fields = ['text', 'radio', 'checkbox'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      class: \"row\",\n      children: fields.map((key, index) => {\n        if (key === 'text') {\n          /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 15\n          }, this);\n        } else if (key === 'radio') {\n          /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Radio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              class: \"form-control\",\n              name: \"set1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              class: \"form-control\",\n              name: \"set2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this);\n        } else if (key === 'checkbox') {\n          /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Radio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              class: \"form-control\",\n              name: \"set1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              class: \"form-control\",\n              name: \"set2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","Form","fields","map","key","index"],"sources":["/Users/roseaugusto/personal-projects/exit-interview/src/pages/Form.js"],"sourcesContent":["import React from 'react'\n\nexport const Form = () => {\n  const fields = ['text', 'radio', 'checkbox'];\n\n  return (\n    <div>\n        <Form class=\"row\">\n      {\n        fields.map((key, index) => {\n          if(key === 'text') {\n              <div class=\"mb-3\">\n                <label>Text</label>\n                <input type=\"text\" class=\"form-control\" />\n              </div>\n          } else if(key === 'radio') {\n              <div class=\"mb-3\">\n                <label>Radio</label>\n                <input type=\"radio\" class=\"form-control\" name=\"set1\" />\n                <input type=\"radio\" class=\"form-control\" name=\"set2\" />\n              </div>\n          } else if(key === 'checkbox') {\n            <div class=\"mb-3\">\n              <label>Radio</label>\n              <input type=\"radio\" class=\"form-control\" name=\"set1\" />\n              <input type=\"radio\" class=\"form-control\" name=\"set2\" />\n            </div>\n        }\n        })\n      }\n      </Form>\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAEzB,OAAO,MAAMC,IAAI,GAAG,MAAM;EACxB,MAAMC,MAAM,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC;EAE5C,oBACE;IAAA,uBACI,QAAC,IAAI;MAAC,KAAK,EAAC,KAAK;MAAA,UAEjBA,MAAM,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;QACzB,IAAGD,GAAG,KAAK,MAAM,EAAE;UACf;YAAK,KAAK,EAAC,MAAM;YAAA,wBACf;cAAA,UAAO;YAAI;cAAA;cAAA;cAAA;YAAA,QAAQ,eACnB;cAAO,IAAI,EAAC,MAAM;cAAC,KAAK,EAAC;YAAc;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QACtC;QACV,CAAC,MAAM,IAAGA,GAAG,KAAK,OAAO,EAAE;UACvB;YAAK,KAAK,EAAC,MAAM;YAAA,wBACf;cAAA,UAAO;YAAK;cAAA;cAAA;cAAA;YAAA,QAAQ,eACpB;cAAO,IAAI,EAAC,OAAO;cAAC,KAAK,EAAC,cAAc;cAAC,IAAI,EAAC;YAAM;cAAA;cAAA;cAAA;YAAA,QAAG,eACvD;cAAO,IAAI,EAAC,OAAO;cAAC,KAAK,EAAC,cAAc;cAAC,IAAI,EAAC;YAAM;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QACnD;QACV,CAAC,MAAM,IAAGA,GAAG,KAAK,UAAU,EAAE;UAC5B;YAAK,KAAK,EAAC,MAAM;YAAA,wBACf;cAAA,UAAO;YAAK;cAAA;cAAA;cAAA;YAAA,QAAQ,eACpB;cAAO,IAAI,EAAC,OAAO;cAAC,KAAK,EAAC,cAAc;cAAC,IAAI,EAAC;YAAM;cAAA;cAAA;cAAA;YAAA,QAAG,eACvD;cAAO,IAAI,EAAC,OAAO;cAAC,KAAK,EAAC,cAAc;cAAC,IAAI,EAAC;YAAM;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QACnD;QACV;MACA,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EAEG;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAA,KA/BYH,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}